#!/usr/bin/env python3
"""
Demo de la nueva funcionalidad de Vista de Emails Enviados.
Muestra las capacidades y caracter√≠sticas principales.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import crear_conexion, crear_tabla, obtener_emails_enviados, obtener_ruta_reporte_pdf

def demo_vista_emails():
    """
    Demostraci√≥n de la nueva vista de emails enviados.
    """
    print("üé≠ DEMO: Nueva Vista de Emails Enviados")
    print("=" * 60)
    print("Esta demostraci√≥n muestra las nuevas capacidades implementadas\n")
    
    conn = crear_conexion()
    if not conn:
        print("‚ùå Error: No se pudo conectar a la base de datos")
        return False
    
    try:
        crear_tabla(conn)
        
        # 1. Mostrar capacidades de filtrado
        print("üîç 1. CAPACIDADES DE FILTRADO")
        print("-" * 30)
        
        # Sin filtros (todos)
        todos_emails = obtener_emails_enviados(conn, limite=50)
        print(f"üìß Total emails enviados: {len(todos_emails)}")
        
        if todos_emails:
            # Filtro por titular
            titular_ejemplo = todos_emails[0]['titular']
            filtro_titular = obtener_emails_enviados(conn, filtro_titular=titular_ejemplo[:10])
            print(f"üè¢ Filtrado por '{titular_ejemplo[:10]}': {len(filtro_titular)} resultados")
            
            # Filtro por fechas (√∫ltimos 30 d√≠as)
            from datetime import datetime, timedelta
            fecha_hasta = datetime.now().strftime('%Y-%m-%d')
            fecha_desde = (datetime.now() - timedelta(days=30)).strftime('%Y-%m-%d')
            
            filtro_fecha = obtener_emails_enviados(
                conn, 
                filtro_fechas=(fecha_desde, fecha_hasta),
                limite=100
            )
            print(f"üìÖ √öltimos 30 d√≠as: {len(filtro_fecha)} emails")
        
        # 2. An√°lisis de contenido
        print(f"\nüìä 2. AN√ÅLISIS DE CONTENIDO")
        print("-" * 30)
        
        if todos_emails:
            total_boletines = sum(email['total_boletines'] for email in todos_emails)
            titulares_unicos = len(set(email['titular'] for email in todos_emails))
            promedio_boletines = total_boletines / len(todos_emails) if todos_emails else 0
            
            print(f"üìÑ Total boletines enviados: {total_boletines}")
            print(f"üë• Titulares √∫nicos: {titulares_unicos}")
            print(f"üìä Promedio boletines/email: {promedio_boletines:.1f}")
            
            # An√°lisis por importancia
            importancias = {}
            for email in todos_emails:
                if email['importancia']:
                    importancias[email['importancia']] = importancias.get(email['importancia'], 0) + 1
            
            if importancias:
                print(f"‚ö° Distribuci√≥n por importancia:")
                for imp, count in importancias.items():
                    print(f"   {imp}: {count} emails")
        
        # 3. Verificaci√≥n de PDFs
        print(f"\nüìÅ 3. VERIFICACI√ìN DE ARCHIVOS PDF")
        print("-" * 30)
        
        informes_dir = "informes"
        if os.path.exists(informes_dir):
            archivos_pdf = [f for f in os.listdir(informes_dir) if f.endswith('.pdf')]
            print(f"üìÑ PDFs en directorio: {len(archivos_pdf)}")
            
            # Verificar coincidencias
            pdfs_encontrados = 0
            pdfs_faltantes = 0
            
            for email in todos_emails[:5]:  # Verificar primeros 5
                ruta_pdf = obtener_ruta_reporte_pdf(email['titular'], email['fecha_envio'])
                if ruta_pdf and os.path.exists(ruta_pdf):
                    pdfs_encontrados += 1
                    print(f"   ‚úÖ {email['titular']}: {os.path.basename(ruta_pdf)}")
                else:
                    pdfs_faltantes += 1
                    print(f"   ‚ùå {email['titular']}: PDF no encontrado")
            
            print(f"\nüìä Resultado verificaci√≥n (primeros 5):")
            print(f"   ‚úÖ PDFs encontrados: {pdfs_encontrados}")
            print(f"   ‚ùå PDFs faltantes: {pdfs_faltantes}")
        else:
            print(f"‚ö†Ô∏è Directorio 'informes/' no existe")
        
        # 4. Ejemplo de datos detallados
        print(f"\nüìã 4. EJEMPLO DE DATOS DETALLADOS")
        print("-" * 30)
        
        if todos_emails:
            email_ejemplo = todos_emails[0]
            print(f"üìß Email de ejemplo:")
            print(f"   Titular: {email_ejemplo['titular']}")
            print(f"   Email: {email_ejemplo['email']}")
            print(f"   Fecha: {email_ejemplo['fecha_envio'] or 'No especificada'}")
            print(f"   Boletines: {email_ejemplo['total_boletines']}")
            print(f"   Importancia: {email_ejemplo['importancia'] or 'No especificada'}")
            
            if email_ejemplo['numeros_boletines']:
                boletines_str = ', '.join(email_ejemplo['numeros_boletines'][:3])
                if len(email_ejemplo['numeros_boletines']) > 3:
                    boletines_str += f" (+ {len(email_ejemplo['numeros_boletines']) - 3} m√°s)"
                print(f"   N√∫meros: {boletines_str}")
        
        # 5. Capacidades de la interfaz
        print(f"\nüé® 5. CARACTER√çSTICAS DE LA INTERFAZ")
        print("-" * 30)
        print("‚úÖ Filtros avanzados:")
        print("   ‚Ä¢ Por titular (b√∫squeda parcial)")
        print("   ‚Ä¢ Por rango de fechas (desde/hasta)")
        print("   ‚Ä¢ L√≠mite de resultados (25/50/100/200)")
        print("   ‚Ä¢ Actualizaci√≥n manual")
        
        print("\n‚úÖ Informaci√≥n mostrada:")
        print("   ‚Ä¢ Datos completos del env√≠o")
        print("   ‚Ä¢ Estad√≠sticas agregadas")
        print("   ‚Ä¢ Lista expandible de boletines")
        print("   ‚Ä¢ Estado de archivos PDF")
        
        print("\n‚úÖ Funcionalidades:")
        print("   ‚Ä¢ Descarga directa de PDFs")
        print("   ‚Ä¢ Vista expandible por email")
        print("   ‚Ä¢ Organizaci√≥n cronol√≥gica")
        print("   ‚Ä¢ Manejo de errores robusto")
        
        # 6. Instrucciones de uso
        print(f"\nüöÄ 6. C√ìMO ACCEDER A LA NUEVA VISTA")
        print("-" * 30)
        print("1. Ejecuta la aplicaci√≥n:")
        print("   streamlit run app.py")
        print("\n2. Navega a la secci√≥n 'Emails'")
        print("\n3. Haz clic en la pesta√±a 'üìÅ Emails Enviados'")
        print("\n4. Utiliza los filtros para encontrar emails espec√≠ficos")
        print("\n5. Expande un email para ver detalles completos")
        print("\n6. Descarga PDFs con el bot√≥n 'üì• Descargar PDF'")
        
        print("\n" + "=" * 60)
        print("üéâ DEMOSTRACI√ìN COMPLETADA")
        print("\nLa nueva vista de emails enviados est√° lista para usar!")
        print("Proporciona acceso completo al historial con descarga de PDFs.")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error durante la demostraci√≥n: {e}")
        return False
    
    finally:
        if conn:
            conn.close()

def main():
    """Funci√≥n principal"""
    demo_vista_emails()

if __name__ == "__main__":
    main()
